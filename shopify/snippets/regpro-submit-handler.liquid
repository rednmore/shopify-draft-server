<!-- 1) LOADER reCAPTCHA v3 -->
<script id="regpro-recaptcha-v3">
(function(){
  // Même clé site pour vos deux domaines (vous pouvez en ajouter une seconde plus tard)
  var SITE_KEYS = {
    "www.ikyum.com":      "6LcZNLkrAAAAAOW2H08jogeIXhjw0S59U1cwKoUw",
    "www.xn--zy-gka.com": "6LcZNLkrAAAAAOW2H08jogeIXhjw0S59U1cwKoUw"
  };

  var loaded=false, loading=false, queue=[], cacheKey=null;
  function host(){ try{ return location.hostname; }catch(_){ return ""; } }
  function siteKey(){
    if (!cacheKey) cacheKey = SITE_KEYS[host()] || Object.values(SITE_KEYS)[0] || "";
    return cacheKey;
  }
  function ensureApi(){
    return new Promise(function(resolve, reject){
      if (loaded && window.grecaptcha) return resolve();
      queue.push(resolve);
      if (loading) return;

      var key = siteKey();
      if (!key) { reject(new Error("missing-sitekey")); return; }

      loading = true;
      var s=document.createElement("script");
      s.src = "https://www.google.com/recaptcha/api.js?render=" + encodeURIComponent(key);
      s.async = true; s.defer = true;
      s.onload = function(){ loaded=true; loading=false; while(queue.length) (queue.shift())(); };
      s.onerror = function(){ loading=false; reject(new Error("recaptcha-api-load-failed")); };
      document.head.appendChild(s);
    });
  }
  async function getToken(action){
    await ensureApi();
    var key = siteKey();
    return new Promise(function(resolve, reject){
      try{
        grecaptcha.ready(function(){
          grecaptcha.execute(key, { action: action || "submit" })
            .then(resolve).catch(reject);
        });
      }catch(e){ reject(e); }
    });
  }
  // API publique
  window.getRecaptchaV3Token = async function(action){
    try{ return await getToken(action); }
    catch(_){ return await getToken(action); } // petit retry
  };
})();
</script>

<!-- 2) HANDLER (v3) — Envoi JSON vers backend SMTP, CSV généré côté serveur -->
<script>
(function(){
  if (window.__regpro_snippet_bound) return;
  window.__regpro_snippet_bound = true;

  var form = document.getElementById('RegisterForm');
  if (!form) return;
  if (form.dataset.regproSnippet === '1') return;
  form.dataset.regproSnippet = '1';

  // Utilise l’endpoint configuré dans la section (data-endpoint) ou un fallback propre
  const ENDPOINT = (form.dataset.endpoint || "https://<VOTRE-APP-RENDER>.onrender.com/ikyum/regpro/submit").trim();

  var submitBtn = form.querySelector('.regpro__btn');
  var busy = false;

  function collectFormData(){
    var data = {};
    form.querySelectorAll('[data-key]').forEach(function(el){
      var k = (el.getAttribute('data-key')||'').trim(); if(!k) return;
      var v = el.tagName==='SELECT'
        ? ((el.options[el.selectedIndex] && el.options[el.selectedIndex].value) || '')
        : (el.type==='checkbox' ? (el.checked ? (el.value||'1') : '') : (el.value||''));
      data[k] = v;
    });
    // Sauvegarde des champs natifs si renseignés
    var nativeEmail = document.getElementById('NativeEmail');
    if (nativeEmail && !data.email) data.email = nativeEmail.value || '';
    return data;
  }

  function disableUi(yes){ if (submitBtn) submitBtn.disabled = !!yes; }
  function showThanks(){
    (document.querySelector('.regpro__form')||form).hidden = true;
    var t=document.getElementById('RegproThanks'); if(t) t.hidden=false;
  }

  // fetch avec timeout + retry simple
  async function postJsonWithRetry(url, payload, tries){
    const controller = new AbortController();
    const timer = setTimeout(function(){ controller.abort(); }, 10000); // 10s
    try{
      const res = await fetch(url, {
        method: "POST",
        headers: { "Content-Type": "application/json", "x-regpro-version": "v3-json" },
        body: JSON.stringify(payload),
        keepalive: true,
        signal: controller.signal
      });
      clearTimeout(timer);
      let json = {};
      try{ json = await res.json(); } catch(_){}
      if (!res.ok || !json || json.ok !== true) throw new Error(json.error || ('HTTP '+res.status));
      return json;
    }catch(err){
      clearTimeout(timer);
      if (tries > 0) {
        await new Promise(r => setTimeout(r, 400));
        return postJsonWithRetry(url, payload, tries - 1);
      }
      throw err;
    }
  }

  async function handleSubmit(e){
    try{ e && e.preventDefault && (e.preventDefault(), e.stopImmediatePropagation && e.stopImmediatePropagation(), e.stopPropagation && e.stopPropagation()); }catch(_){}
    if (busy) return; busy = true; disableUi(true);

    try{
      // Honeypot
      var hp = document.getElementById('HpWebsite');
      var hpVal = (hp && hp.value) ? hp.value.trim() : "";

      // Données
      var data = collectFormData();

      if (typeof window.getRecaptchaV3Token !== 'function') {
        alert('reCAPTCHA v3 non initialisé — envoi impossible.');
        disableUi(false); busy=false; return;
      }

      // Deux exécutions v3 (meilleur signal)
      var tokenAdmin = await window.getRecaptchaV3Token('regpro_admin');
      var tokenUser  = data.email ? await window.getRecaptchaV3Token('regpro_user') : null;

      // Envoi JSON — le backend générera le CSV et l’attachera à l’email admin
      const payload = { data, token_admin: tokenAdmin, token_user: tokenUser, hp: hpVal };

      const resp = await postJsonWithRetry(ENDPOINT, payload, 2);

      // OK → Merci immédiat (le serveur a déjà renvoyé 202/200 et traite l’email en arrière-plan)
      showThanks();
    }catch(err){
      console.error('[regpro] submit error', err);
      alert('Envoi impossible : ' + (err.message || 'Erreur inconnue'));
      disableUi(false);
    } finally {
      busy=false;
    }
  }

  form.addEventListener('submit', handleSubmit, { capture:true });
  var submitBtn = form.querySelector('.regpro__btn');
  if (submitBtn){
    submitBtn.addEventListener('click', function(ev){
      if (!form.checkValidity()) return; // laisse le navigateur afficher la validation native
      ev.preventDefault(); ev.stopImmediatePropagation && ev.stopImmediatePropagation();
      handleSubmit(ev);
    }, { capture:true });
  }
})();
</script>




